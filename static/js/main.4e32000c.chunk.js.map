{"version":3,"sources":["panel.js","App.js","index.js"],"names":["defaultContainer","_ref","children","react_default","a","createElement","className","ControlPanel","_this$props","this","props","startTime","endTime","onChangeDay","allDay","onChangeAllDay","selectedTime","days","Math","round","formatTime","time","date","Date","concat","getMonth","getDate","getFullYear","Container","containerComponent","type","name","checked","onChange","evt","target","disabled","min","max","step","daysToAdd","value","PureComponent","Report","lat","long","description","date_same","hover","esm","latitude","longitude","style","color","onMouseEnter","onEnter","onMouseLeave","onLeave","index_es","icon","faPoop","size","jsx","Component","App","state","mapData","reports","viewport","width","height","zoom","settings","minZoom","maxPitch","dragRotate","_filterFeaturesByDay","features","year","month","day","filter","feature","featureDate","properties","_this2","Object","assign","mapboxApiAccessToken","mapStyle","onViewportChange","setState","map","mkr","App_Report","key","currentMarker","renderMarker","renderPanel","panel_ControlPanel","_handleChangeDay","_handleChangeAllDay","m","offsetLeft","moment","format","media_url","src","renderHeader","renderMap","renderDescription","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.4e32000c.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\n\nconst defaultContainer = ({children}) => <div className=\"control-panel\">{children}</div>;\n\nexport default class ControlPanel extends PureComponent {\n  render() {\n    const {startTime, endTime, onChangeDay, allDay, onChangeAllDay, selectedTime} = this.props;\n    const hour = 60*60*1000;\n    const day = 24*60*60*1000;\n    const days = Math.round((endTime - startTime) / day);\n\n    const _onChangeDay = evt => {\n      const daysToAdd = evt.target.value;\n      // add selected days to start time to calculate new time\n      const newTime = startTime + (daysToAdd * day);\n      onChangeDay(newTime);\n    }\n\n    const formatTime = time => {\n      const date = new Date(time);\n      return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`\n    }\n\n    const Container = this.props.containerComponent || defaultContainer;\n\n    return (\n      <Container>\n        <p>311 human and animal waste requests\n          <br />\n          from <b>{formatTime(startTime)}</b> to <b>{formatTime(endTime)}</b>.\n        </p>\n        <hr />\n        <div className=\"input\">\n          <label>All Days</label>\n          <input type=\"checkbox\"\n            name=\"allday\"\n            checked={allDay}\n            onChange={evt => onChangeAllDay(evt.target.checked)}\n            />\n        </div>\n        <div className={`input ${allDay ? 'disabled' : ''}`}>\n          <label>Each Day: {formatTime(selectedTime)}</label>\n          <input\n            type=\"range\"\n            disabled={allDay}\n            min={1}\n            max={days}\n            step={1}\n            onChange={_onChangeDay}\n            />\n        </div>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport {render} from 'react-dom';\nimport './App.css';\nimport './animate.css'\nimport {Component} from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport {json as requestJson} from 'd3-request';\nimport map from 'lodash-es/map';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPoop } from '@fortawesome/free-solid-svg-icons'\nimport ControlPanel from './panel';\n\nimport reports from './poop.json';\n\nclass Report extends Component {\n\n  render() {\n    const {lat, long, description, date_same, hover}\n   = this.props;\n\n  return (<Marker\n      latitude={lat}\n      longitude={long}\n      description={description}\n\n    >\n      <div style={{ color: '#4E342E' }}\n           onMouseEnter={this.props.onEnter}\n           onMouseLeave={this.props.onLeave}\n      >\n         <FontAwesomeIcon icon={faPoop} size=\"sm\" />\n\n      </div>\n      <style jsx>{`\n          .pin {\n            border-radius: 100px;\n            background: rgba(255, 255, 255, 0.2);\n            padding: 2px;\n            width: 24px;\n            height: 24px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n          }\n        `}</style>\n    </Marker>\n  );}\n}\n\nexport default class App extends Component {\n\n  state = {\n    mapData: reports,\n\n    viewport: {\n      width: '100%',\n      height: 750,\n      latitude: 37.757,\n      longitude: -122.435,\n      zoom: 11.9,\n    },\n\n    settings: {\n      minZoom: 11.9,\n      maxPitch: 0,\n      dragRotate: false\n    }\n  };\n\n  _filterFeaturesByDay = (features, time) => {\n    const date = new Date(time);\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    return features\n      .filter(feature => {\n        const featureDate = new Date(feature.properties.time);\n        return featureDate.getFullYear() == year\n          && featureDate.getMonth() == month\n          && featureDate.getDate() == day;\n      })};\n\n  renderHeader() {\n    return (\n      <div className=\"header\">\n        <h1>A Week of Waste</h1>\n        <style jsx>{`\n            .header {\n              padding: 35px;\n              align-self: stretch;\n              display: flex;\n              justify-content: space-between;\n              align-items: center;\n            }\n            h1 {\n              margin: 0;\n              font-size: 30px;\n            }\n          `}</style>\n      </div>\n    );\n  }\n\n  renderDescription() {\n    return (\n      <div className=\"description\">\n        Visualizing human and animal waste 311 reports in San Francisco from the morning of April 16 to April 24, 2019.\n        The data is sourced from the 311 mobile site, based on a few queries.\n        <style jsx>{`\n          .description {\n            padding: 30px;\n            font-size: 15px;\n          }\n          `}</style>\n      </div>\n    );\n  }\n\n  renderMap() {\n    return (\n      <ReactMapGL\n        mapboxApiAccessToken=\"pk.eyJ1IjoianNqaWFuZyIsImEiOiJjamswaHVkenAwNnp6M3RyeWlkZjRmeHFrIn0.tfl-yxZeQ1M2UQmE4rnSOA\"\n        {...this.state.settings}\n        {...this.state.viewport}\n        mapStyle=\"mapbox://styles/jsjiang/cjuit41pi4adt1ftqlgm605j3\"\n        onViewportChange={(viewport) => this.setState({ viewport })}\n      >\n        {map(this.state.mapData, mkr => (\n          <Report\n            key = {`marker-$(mkr.link)`}\n            {...mkr}\n            onEnter={() => this.setState({ currentMarker: mkr })}\n            onLeave={() => this.setState({ currentMarker: null })}\n            />\n        ))}\n        {this.renderMarker()}\n        {this.renderPanel()}\n      </ReactMapGL>\n      )};\n\n  renderPanel() {\n    return (\n      <ControlPanel\n        containerComponent={this.props.containerComponent}\n        onChangeDay={this._handleChangeDay}\n        onChangeAllDay={this._handleChangeAllDay}\n        />);\n  }\n\n  renderMarker() {\n    if (!this.state.currentMarker) {\n      return null;\n    }\n    const m = this.state.currentMarker;\n\n    return (\n      <Marker\n        latitude={m.lat}\n        longitude={m.long}\n        offsetLeft={24}>\n        <div className=\"popup animated bounceIn mono\">\n          <div> {moment(m.date_same).format(\"MMMM Do, YYYY\")} <br />\n                {moment(m.date_same).format(\"h:mm a\")} </div>\n\n          <div className=\"desc\">{m.description}</div>\n\n          {m.media_url && <img src={m.media_url} />}\n\n        </div>\n\n        <style jsx>{`\n         .popup {\n           background: #4E342E;\n           border-radius: 8px;\n           color: white;\n           padding: 12px;\n           font-size: 13px;\n           line-height: 1.5em;\n           position: absolute;\n           width: 250px;\n           pointer-events: none;\n         }\n\n         .desc {\n           margin-top: 12px;\n         }\n       `}</style>\n      </Marker>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        {this.renderHeader()}\n        <div className=\"content\">\n          {this.renderMap()}\n          {this.renderDescription()}\n        </div>\n        <style jsx=\"true\">{`\n            .container {\n              min-height: 100vh;\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n            }\n            .content {\n              align-self: stretch;\n              flex-grow: 1;\n              display: flex;\n              flex-direction: column;\n            `}</style>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}